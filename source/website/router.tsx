/*------------------------------------------
 * Generated by htmx-router                *
 * Warn: Any changes will be overwritten   *
-------------------------------------------*/

import { GenericContext, RouteTree } from "htmx-router/bin/router";
import { RegisterDynamic } from "htmx-router/bin/util/dynamic";
import { GetMountUrl } from 'htmx-router/bin/client/mount';
import { GetSheetUrl } from 'htmx-router/bin/util/css';
import { RouteModule } from "htmx-router";

const modules = import.meta.glob('./routes/**/*.{ts,tsx}', { eager: true });

export const tree = new RouteTree();
for (const path in modules) {
	const tail = path.lastIndexOf(".");
	const url = path.slice(9, tail);
	tree.ingest(url, modules[path] as RouteModule<any>);
}

export function Dynamic<T extends Record<string, string>>(props: {
	params: T,
	loader: (params: T, ctx: GenericContext) => Promise<JSX.Element>
	children?: JSX.Element
}): JSX.Element {
	const path = RegisterDynamic(props.loader);

	const query = new URLSearchParams();
	for (const key in props.params) query.set(key, props.params[key]);
	const url = path + query.toString();

	return <div
		hx-get={url}
		hx-trigger="load"
		hx-swap="outerHTML transition:true"
		style={{ display: "contents" }}
	>{props.children ? props.children : ""}</div>
}

export function RouteHeaders() {
	return <>
		<link href={GetSheetUrl()} rel="stylesheet"></link>
		<script src={GetMountUrl()}></script>
	</>
}